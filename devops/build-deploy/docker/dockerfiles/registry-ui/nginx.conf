user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
	worker_connections 4000;
	use epoll;
	multi_accept on;
}

http {
	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	
	# disable any limits to avoid HTTP 413 for large image uploads
	client_max_body_size 0;
	
    # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
    chunked_transfer_encoding on;	
	
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	##
	# Virtual Host Configs
	##
	
	# Importante para nombres de dominio muy largos
	server_names_hash_bucket_size 128;

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;

	server {
			listen 443;
			server_name caas.onesaitplatform.com;
			
        	ssl_certificate /etc/nginx/ssl/domain.cer;
        	ssl_certificate_key /etc/nginx/ssl/domain.key;

        	ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
        	     	        	     				
			location / {
				proxy_pass https://10.3.1.4:8080;

        	                proxy_set_header Host $host;
        		        proxy_set_header X-Forwarded-Proto $scheme;
        		        proxy_set_header X-Forwarded-Port $server_port;
        		        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	
        		        proxy_http_version 1.1;
        		        proxy_set_header Upgrade $http_upgrade;
        		        proxy_set_header Connection "upgrade";
        		        proxy_read_timeout 900s;
			}
	}

	server {
			listen 80;
			server_name registry.onesaitplatform.com;
			
			return 301 https://registry.onesaitplatform.com$request_uri;
	}
	
	server {
			
    		listen 443 ssl;
    		server_name registry.onesaitplatform.com;
			
        	ssl_certificate /etc/nginx/ssl/domain.cer;
        	ssl_certificate_key /etc/nginx/ssl/domain.key;

        	ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
        	     							
			location / {
				proxy_pass http://opregistryui;
				
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
			}  
						
			location /v2/ {
				proxy_pass https://opregistry:443/v2/;
				
				limit_except GET {
					allow 52.232.76.13;
					deny all;
				}					
							
    			proxy_set_header  Host              $http_host;   # required for docker client's sake
    			proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    			proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    			proxy_set_header  X-Forwarded-Proto $scheme;
    			proxy_read_timeout                  900;				
			}   		  	       	            	  	

	}


}
